/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPassageAudioRequest = {
  /**
   * Bible passage reference (e.g., "John 3:16" or "43011016")
   */
  query: string;
};

/** @internal */
export const GetPassageAudioRequest$inboundSchema: z.ZodType<
  GetPassageAudioRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: z.string(),
});

/** @internal */
export type GetPassageAudioRequest$Outbound = {
  query: string;
};

/** @internal */
export const GetPassageAudioRequest$outboundSchema: z.ZodType<
  GetPassageAudioRequest$Outbound,
  z.ZodTypeDef,
  GetPassageAudioRequest
> = z.object({
  query: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPassageAudioRequest$ {
  /** @deprecated use `GetPassageAudioRequest$inboundSchema` instead. */
  export const inboundSchema = GetPassageAudioRequest$inboundSchema;
  /** @deprecated use `GetPassageAudioRequest$outboundSchema` instead. */
  export const outboundSchema = GetPassageAudioRequest$outboundSchema;
  /** @deprecated use `GetPassageAudioRequest$Outbound` instead. */
  export type Outbound = GetPassageAudioRequest$Outbound;
}

export function getPassageAudioRequestToJSON(
  getPassageAudioRequest: GetPassageAudioRequest,
): string {
  return JSON.stringify(
    GetPassageAudioRequest$outboundSchema.parse(getPassageAudioRequest),
  );
}

export function getPassageAudioRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPassageAudioRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPassageAudioRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPassageAudioRequest' from JSON`,
  );
}
