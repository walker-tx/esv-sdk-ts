/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { EsvCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { MCPScope, mcpScopes } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$passagesGetAudio } from "./tools/passagesGetAudio.js";
import { tool$passagesGetHtml } from "./tools/passagesGetHtml.js";
import { tool$passagesGetText } from "./tools/passagesGetText.js";
import { tool$passagesSearch } from "./tools/passagesSearch.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  serverIdx?: SDKOptions["serverIdx"];
}) {
  const server = new McpServer({
    name: "Esv",
    version: "0.1.0",
  });

  const client = new EsvCore({
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });
  const scopes = new Set(deps.scopes ?? mcpScopes);
  const tool = createRegisterTool(deps.logger, server, client, scopes);

  tool(tool$passagesGetHtml);
  tool(tool$passagesSearch);
  tool(tool$passagesGetAudio);
  tool(tool$passagesGetText);

  return server;
}
