// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

// IndentUsing - Character to use for indentation
type IndentUsing string

const (
	IndentUsingSpace IndentUsing = "space"
	IndentUsingTab   IndentUsing = "tab"
)

func (e IndentUsing) ToPointer() *IndentUsing {
	return &e
}
func (e *IndentUsing) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "space":
		fallthrough
	case "tab":
		*e = IndentUsing(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IndentUsing: %v", v)
	}
}

type GetPassageTextRequest struct {
	// Bible passage reference (e.g., "John 3:16" or "43011016")
	Query string `queryParam:"style=form,explode=true,name=q"`
	// Include passage references before passages
	IncludePassageReferences *bool `default:"true" queryParam:"style=form,explode=true,name=include-passage-references"`
	// Include verse numbers
	IncludeVerseNumbers *bool `default:"true" queryParam:"style=form,explode=true,name=include-verse-numbers"`
	// Include the verse number for the first verse of a chapter
	IncludeFirstVerseNumbers *bool `default:"true" queryParam:"style=form,explode=true,name=include-first-verse-numbers"`
	// Include callouts to footnotes in the text.
	IncludeFootnotes *bool `default:"true" queryParam:"style=form,explode=true,name=include-footnotes"`
	// Include footnote body content
	IncludeFootnoteBody *bool `default:"true" queryParam:"style=form,explode=true,name=include-footnote-body"`
	// Include passage headings
	IncludeHeadings *bool `default:"true" queryParam:"style=form,explode=true,name=include-headings"`
	// Include a short copyright notice
	IncludeShortCopyright *bool `default:"false" queryParam:"style=form,explode=true,name=include-short-copyright"`
	// Include the full copyright notice
	IncludeCopyright *bool `default:"false" queryParam:"style=form,explode=true,name=include-copyright"`
	// Include horizontal lines between passages
	IncludePassageHorizontalLines *bool `default:"false" queryParam:"style=form,explode=true,name=include-passage-horizontal-lines"`
	// Include horizontal lines under headings
	IncludeHeadingHorizontalLines *bool `default:"false" queryParam:"style=form,explode=true,name=include-heading-horizontal-lines"`
	// Length of horizontal lines
	HorizontalLineLength *int64 `default:"55" queryParam:"style=form,explode=true,name=horizontal-line-length"`
	// Include "Selah" in passage text
	IncludeSelahs *bool `default:"true" queryParam:"style=form,explode=true,name=include-selahs"`
	// Character to use for indentation
	IndentUsing *IndentUsing `default:"space" queryParam:"style=form,explode=true,name=indent-using"`
	// Number of indentation characters for paragraphs
	IndentParagraphs *int64 `default:"2" queryParam:"style=form,explode=true,name=indent-paragraphs"`
	// Number of indentation characters for poetry
	IndentPoetry *int64 `default:"2" queryParam:"style=form,explode=true,name=indent-poetry"`
	// Number of indentation characters for poetry lines
	IndentPoetryLines *int64 `default:"4" queryParam:"style=form,explode=true,name=indent-poetry-lines"`
	// Number of indentation characters for declares
	IndentDeclares *int64 `default:"40" queryParam:"style=form,explode=true,name=indent-declares"`
	// Number of indentation characters for Psalm doxology
	IndentPsalmDoxology *int64 `default:"30" queryParam:"style=form,explode=true,name=indent-psalm-doxology"`
	// Maximum line length
	LineLength *int64 `default:"0" queryParam:"style=form,explode=true,name=line-length"`
}

func (g GetPassageTextRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetPassageTextRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"q"}); err != nil {
		return err
	}
	return nil
}

func (o *GetPassageTextRequest) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *GetPassageTextRequest) GetIncludePassageReferences() *bool {
	if o == nil {
		return nil
	}
	return o.IncludePassageReferences
}

func (o *GetPassageTextRequest) GetIncludeVerseNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeVerseNumbers
}

func (o *GetPassageTextRequest) GetIncludeFirstVerseNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeFirstVerseNumbers
}

func (o *GetPassageTextRequest) GetIncludeFootnotes() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeFootnotes
}

func (o *GetPassageTextRequest) GetIncludeFootnoteBody() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeFootnoteBody
}

func (o *GetPassageTextRequest) GetIncludeHeadings() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeHeadings
}

func (o *GetPassageTextRequest) GetIncludeShortCopyright() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeShortCopyright
}

func (o *GetPassageTextRequest) GetIncludeCopyright() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeCopyright
}

func (o *GetPassageTextRequest) GetIncludePassageHorizontalLines() *bool {
	if o == nil {
		return nil
	}
	return o.IncludePassageHorizontalLines
}

func (o *GetPassageTextRequest) GetIncludeHeadingHorizontalLines() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeHeadingHorizontalLines
}

func (o *GetPassageTextRequest) GetHorizontalLineLength() *int64 {
	if o == nil {
		return nil
	}
	return o.HorizontalLineLength
}

func (o *GetPassageTextRequest) GetIncludeSelahs() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeSelahs
}

func (o *GetPassageTextRequest) GetIndentUsing() *IndentUsing {
	if o == nil {
		return nil
	}
	return o.IndentUsing
}

func (o *GetPassageTextRequest) GetIndentParagraphs() *int64 {
	if o == nil {
		return nil
	}
	return o.IndentParagraphs
}

func (o *GetPassageTextRequest) GetIndentPoetry() *int64 {
	if o == nil {
		return nil
	}
	return o.IndentPoetry
}

func (o *GetPassageTextRequest) GetIndentPoetryLines() *int64 {
	if o == nil {
		return nil
	}
	return o.IndentPoetryLines
}

func (o *GetPassageTextRequest) GetIndentDeclares() *int64 {
	if o == nil {
		return nil
	}
	return o.IndentDeclares
}

func (o *GetPassageTextRequest) GetIndentPsalmDoxology() *int64 {
	if o == nil {
		return nil
	}
	return o.IndentPsalmDoxology
}

func (o *GetPassageTextRequest) GetLineLength() *int64 {
	if o == nil {
		return nil
	}
	return o.LineLength
}

type GetPassageTextResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	PassageResponse *components.PassageResponse
}

func (o *GetPassageTextResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetPassageTextResponse) GetPassageResponse() *components.PassageResponse {
	if o == nil {
		return nil
	}
	return o.PassageResponse
}
