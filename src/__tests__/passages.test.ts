/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, it } from "vitest";

it.skip("Passages Get Passage Html Standard Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-StandardReference.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Compact Notation", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-CompactNotation.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Chapter Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-ChapterRange.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Numerical Encoding", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-NumericalEncoding.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Digital Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-DigitalRange.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Multi Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-MultiReference.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html Structured Digital", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml-StructuredDigital.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Html", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageHtml.test referencing operation getPassageHtml missing required query parameter query`]",
  );
});

it.skip("Passages Search Passages", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step searchPassages.test referencing operation searchPassages missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Standard Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-StandardReference.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Compact Notation", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-CompactNotation.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Chapter Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-ChapterRange.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Numerical Encoding", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-NumericalEncoding.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Digital Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-DigitalRange.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Multi Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-MultiReference.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Audio Structured Digital", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageAudio-StructuredDigital.test referencing operation getPassageAudio missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Standard Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-StandardReference.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Compact Notation", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-CompactNotation.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Chapter Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-ChapterRange.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Numerical Encoding", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-NumericalEncoding.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Digital Range", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-DigitalRange.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Multi Reference", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-MultiReference.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text Structured Digital", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText-StructuredDigital.test referencing operation getPassageText missing required query parameter query`]",
  );
});

it.skip("Passages Get Passage Text", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step getPassageText.test referencing operation getPassageText missing required query parameter query`]",
  );
});
